[
    {
        "id": "eb7909bcf5fcaf8a",
        "type": "tab",
        "label": "Big Bang",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c86af370eff94afa",
        "type": "tab",
        "label": "(Engineer) Unicorn Getting Started",
        "disabled": false,
        "info": "Guide to an incoming Unicorn to get their technical hoofs wet. The guide takes you through familiarization with local K8s clusters, bigbang, and zarf.",
        "env": []
    },
    {
        "id": "0ac7681ed1c2bc4b",
        "type": "subflow",
        "name": "Kubernetes",
        "info": "Kubernetes is an open source container orchestration engine for automating deployment, scalling, and management of containerized applications. [source](https://kubernetes.io/docs/home/)",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 180,
                "wires": [
                    {
                        "id": "73521b98841c6355"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1720,
                "y": 300,
                "wires": [
                    {
                        "id": "752d2d1fc700d27e",
                        "port": 0
                    },
                    {
                        "id": "c53965f3ddc770ad",
                        "port": 0
                    },
                    {
                        "id": "e902145181ebd724",
                        "port": 0
                    },
                    {
                        "id": "418551f904d62b20",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "73521b98841c6355",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Kubernetes",
        "info": "# Description\n\n\n## Resources\n- https://kubernetes.io/docs/home/ ***\n- https://www.youtube.com/watch?v=VnvRFRk_51k \n- https://www.youtube.com/watch?v=X48VuDVv0do (long video, covers most topics in this flow)",
        "x": 450,
        "y": 180,
        "wires": [
            [
                "90665185044d3fc2",
                "ccf8bad6e9ebfb6a",
                "4146a7d5608cc03b",
                "418551f904d62b20"
            ]
        ]
    },
    {
        "id": "90665185044d3fc2",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Kubernetes Objects",
        "info": "",
        "x": 780,
        "y": 180,
        "wires": [
            [
                "d810b83f64f0bc5e",
                "0d309e7b063a4ce2"
            ]
        ]
    },
    {
        "id": "ccf8bad6e9ebfb6a",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Kubernetes Networking",
        "info": "",
        "x": 810,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "4146a7d5608cc03b",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Kubernetes Storage",
        "info": "",
        "x": 820,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "418551f904d62b20",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Kubernetes App Manifests",
        "info": "",
        "x": 780,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "0d309e7b063a4ce2",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Configurations",
        "info": "",
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "c53965f3ddc770ad",
                "e902145181ebd724"
            ]
        ]
    },
    {
        "id": "d810b83f64f0bc5e",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Deployments",
        "info": "",
        "x": 1030,
        "y": 100,
        "wires": [
            [
                "752d2d1fc700d27e"
            ]
        ]
    },
    {
        "id": "752d2d1fc700d27e",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Pods",
        "info": "",
        "x": 1290,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c53965f3ddc770ad",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Configmaps",
        "info": "",
        "x": 1270,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e902145181ebd724",
        "type": "comment",
        "z": "0ac7681ed1c2bc4b",
        "name": "Secrets",
        "info": "",
        "x": 1260,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "5dfd2ba38ec5178d",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Containerization",
        "info": "",
        "x": 80,
        "y": 300,
        "wires": [
            [
                "ea946e25b7c2079f"
            ]
        ]
    },
    {
        "id": "8c04bec4a15f6702",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Helm",
        "info": "",
        "x": 890,
        "y": 440,
        "wires": [
            [
                "e328f5849309e731"
            ]
        ]
    },
    {
        "id": "fc01372231b580db",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Custom Resource Definitions",
        "info": "",
        "x": 940,
        "y": 500,
        "wires": [
            [
                "e328f5849309e731"
            ]
        ]
    },
    {
        "id": "09d8e90d5b4ade12",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Kustomization",
        "info": "",
        "x": 920,
        "y": 640,
        "wires": [
            [
                "e328f5849309e731"
            ]
        ]
    },
    {
        "id": "71a96ec4058930db",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "GitOps",
        "info": "",
        "x": 920,
        "y": 260,
        "wires": [
            [
                "45465f711df6da7e"
            ]
        ]
    },
    {
        "id": "98df2d11adb09046",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "git",
        "info": "# Description\n\n[Git](https://git-scm.com/) is a free and open source distributed version control system.\n\n## Resources\n- https://git-scm.com/docs\n\n\n## Examples\n- github.com\n- gitlab.com\n- https://gitea.com/",
        "x": 750,
        "y": 180,
        "wires": [
            [
                "71a96ec4058930db"
            ]
        ]
    },
    {
        "id": "45465f711df6da7e",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Flux",
        "info": "",
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "e328f5849309e731"
            ]
        ]
    },
    {
        "id": "e328f5849309e731",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Big Bang",
        "info": "",
        "x": 1440,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ea946e25b7c2079f",
        "type": "subflow:0ac7681ed1c2bc4b",
        "z": "eb7909bcf5fcaf8a",
        "name": "",
        "x": 400,
        "y": 300,
        "wires": [
            [
                "8c04bec4a15f6702",
                "fc01372231b580db",
                "09d8e90d5b4ade12",
                "71a96ec4058930db",
                "81348cdecdf51fd9"
            ]
        ]
    },
    {
        "id": "81348cdecdf51fd9",
        "type": "comment",
        "z": "eb7909bcf5fcaf8a",
        "name": "Operators",
        "info": "https://www.youtube.com/watch?v=ha3LjlD6g7g",
        "x": 890,
        "y": 380,
        "wires": [
            [
                "e328f5849309e731"
            ]
        ]
    },
    {
        "id": "40bfe328130d9c41",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Deploy K3d",
        "info": "https://k3d.io/v5.2.2/\n\n### Choose your platform\nThe preferred free VM software is [VirtualBox](https://www.virtualbox.org/); however, it is not compatible with M1 chips! So, if you are using an M1 Mac, we highly recommend you go with the [Cloud](#Cloud) option below\n\n##### Cloud\nRecommend using an EC2 instance with the following specs:\n- AMI: Ubuntu Server (64-bit, x86)\n- Instance Type: t3a.2xlarge\n- 100 GB EBS\n- Security group rules for allowing web traffic\n\n##### Local\nUse [Vagrant](https://www.vagrantup.com/) to spin up a VM with at least the following specs:\n- 10GB RAM\n- 4 CPU cores\n- An IP that can be [accessed](https://www.vagrantup.com/docs/networking/private_network#static-ip) from the host machine. \n\nDepending on RAM/CPU availability, you may want to run 2 or more K3d nodes\n\n## Cluster creation\n\nOnce you have a host for deploying a k3d cluster - you can configure a cluster for future nodes in this training.\n\nOne possible configuration would be a 3 node cluster with 1 server and 2 agents (to get started).\n\nAnother consideration is exposing applications after the cluster is running and apps have been deployed w/ services and ingresses.\n\nA possible configuration might look like:\n\n`k3d cluster create -s 1 -a 2 -p \"8081:80@loadbalancer\" dev-cluster`\n\n-s 1 represents 1 server node\n-a 2 represents 2 agent nodes\n\n-p \"8081:80@loadbalancer\" represents mapping 8081 on this k3d host to ports 80 internally.",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "691424f6cfd58372"
            ]
        ]
    },
    {
        "id": "691424f6cfd58372",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Deploy a pod info application (with Kustomize)",
        "info": "# Kustomize\n\n\"Kustomize is a command-line configuration manager for Kubernetes objects. Integrated with kubectl since 1.14, it allows you to make declarative changes to your configurations without touching a template.\"\n\n## Recommended Reading\n\n`https://www.mirantis.com/blog/introduction-to-kustomize-part-1-creating-a-kubernetes-app-out-of-multiple-pieces/`\n\nThe above tutorial can be run on the k3d cluster you have created. This is a much more complex example than the podinfo example you will deploy below.\n\n## Podinfo\n\n\"Podinfo is a tiny web application made with Go that showcases best practices of running microservices in Kubernetes\"\n\n### Deployment\n\nNavigate to `https://github.com/stefanprodan/podinfo`\n\nClone the repository to your local machine\n\nFrom within the cloned directory, we can execute kustomize through the built in functionality in `kubectl`.\n\n`kubectl kustomize ./kustomize`\n\nThis will return the built manifest for the application to be deployed. You can then deploy the application to the cluster through `kubectl apply -k ./kustomize`\n\n## Success Criteria\n\n- 2 podinfo pods in the target namespace (default if not specified)\n- A podinfo service\n- A horizontal pod autoscaler\n\nWe can port-forward this applications service and visit it in browser to confirm functionality.\n\n`kubectl port-forward service/podinfo 9898:http`\n\nThis port fowards the podinfo service `http` port (as defined in the service) to the 9898 host port.",
        "x": 580,
        "y": 160,
        "wires": [
            [
                "2d66fece0a8f5fdf"
            ]
        ]
    },
    {
        "id": "2d66fece0a8f5fdf",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Expose podinfo with an Ingress",
        "info": "# Ingress\n\nIn the previous exercise, we deployed the podinfo application and confirmed functionality by visiting it in-browser through port-forwarding with kubectl. We can instead use an ingress and the default traefik ingress-controller to handle this functionaity more natively. \n\nOfficial k3d docs:  https://k3d.io/v5.0.0/usage/exposing_services/\n\n## Ingress deployment\nDue to the cluster configuration that we executed in the first node (See the -p loadbalancer parameter). we can configure an ingress to expose the application, as is one of a few standard practices for exposing internal applications to external traffic.\n\n### Ingress template\n\nIngress docs: https://kubernetes.io/docs/concepts/services-networking/ingress/\n\nGiven the template from the docs/tutorial we can write an ingress to support this traffic.\n\n## Success Criteria\n\nAfter the ingress is deployed (and given you configured your cluster as described in the first node), then you should be able to access the podinfo application without port-forwarding at `http://localhost:8081` \n\n## Cleanup\n\nThis concludes this deployment of podinfo. You'll want to cleanup the resources we have created. ",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "52eb692e4c51108f"
            ]
        ]
    },
    {
        "id": "52eb692e4c51108f",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Create a podinfo helm chart",
        "info": "# Helm\n\"Helm is the package manager for Kubernetes\"\n\n## Recommended Reading\nhttps://helm.sh/\nhttps://helm.sh/docs/intro/\n\n## Podinfo Helm Chart from Scratch\n\nTODO - Insert content for:\n- deployment\n- service\n- ingress\n- HPA\n* All templated from scratch\n\n## Deploy the official podinfo chart from local files\n\nPreviously we cloned the podinfo repository to our/a local machine. Under the root of the project there is a `charts` directory with a `podinfo` directory that contains the podinfo chart content.\n\n## Basic deployment\n\nLet's create a testing namespace for our target\n`kubectl create ns testing`\n\nWith Helm installed and our k3d cluster still running/configured, we can install the chart in  it's vanilla form (without enabling any additional content).\n\n(From the charts directory)\n`helm install podinfo-dev ./podinfo -n testing`\n\nThis will deploy the chart which results in the deployment and service creation in the target namespace.\n\n## Customizations\nWe can inject exposed customizations as outlined in the README/values.yaml for the purpose of configuring the end package being suited for our needs.\n\nWe can make an edit to the values.yaml and upgrade our application.\n\nhpa:\n  enabled: true\n  \n`helm upgrade podinfo-dev -n testing ./podinfo`\n\nThis should result in an HPA being deployed to our namespace for the application.\n",
        "x": 1410,
        "y": 160,
        "wires": [
            [
                "5361df412a99db12"
            ]
        ]
    },
    {
        "id": "5361df412a99db12",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Deploy BigBang on a new K3d cluster",
        "info": "https://repo1.dso.mil/platform-one/big-bang/bigbang/-/blob/master/docs/guides/deployment_scenarios/quickstart.md",
        "x": 1810,
        "y": 160,
        "wires": [
            [
                "67415f95eb8ab46c"
            ]
        ]
    },
    {
        "id": "67415f95eb8ab46c",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Deploy podinfo helmchart in bigbang",
        "info": "",
        "x": 2240,
        "y": 160,
        "wires": [
            [
                "9b8fdffdc9b5cc53"
            ]
        ]
    },
    {
        "id": "9b8fdffdc9b5cc53",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Add Istio Virtual Service for the podinfo deployment",
        "info": "https://istio.io/latest/docs/reference/config/networking/virtual-service/",
        "x": 2750,
        "y": 160,
        "wires": [
            [
                "339481fd79e107a6"
            ]
        ]
    },
    {
        "id": "339481fd79e107a6",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Deploy podinfo as a Flux HelmRelease",
        "info": "",
        "x": 3210,
        "y": 160,
        "wires": [
            [
                "0f9889d8e9cb7edb"
            ]
        ]
    },
    {
        "id": "0f9889d8e9cb7edb",
        "type": "comment",
        "z": "c86af370eff94afa",
        "name": "Play DOOM using ZARF",
        "info": "https://github.com/defenseunicorns/zarf/tree/master/examples/game",
        "x": 3620,
        "y": 160,
        "wires": [
            []
        ]
    }
]