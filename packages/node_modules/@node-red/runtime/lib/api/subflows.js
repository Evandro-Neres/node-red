var runtime;

var api = module.exports = {
    init: function(_runtime) {
        runtime = _runtime;
    },

    createSubflow: async function(opts) {
        var name = (opts.meta && opts.meta.module) || "";
        return runtime.subflows.createSubflow(opts.meta, opts.flow).then(function(result) {
            runtime.log.audit({event: "subflow.post", subflow:name}, opts.req);
            return result;
        }).catch(function(err) {
            if (err) {
                runtime.log.warn(runtime.log._("api.subflows.error-create-subflow",{name:name, message:err.toString()}));
                if (err.code === 'forbidden') {
                    err.status = 403;
                    throw err;
                } else if (err.code === "not_found") {
                    err.status = 404;
                } else {
                    err.status = 400;
                }
                runtime.log.audit({event: "subflow.post", name:name, error:err.code}, opts.req);
                throw err;
            }
            runtime.log.audit({event: "subflow.post", name:name, error:"not_found"}, opts.req);
            var error = new Error();
            error.code = "not_found";
            error.status = 404;
            throw error;
        });
    },

}
